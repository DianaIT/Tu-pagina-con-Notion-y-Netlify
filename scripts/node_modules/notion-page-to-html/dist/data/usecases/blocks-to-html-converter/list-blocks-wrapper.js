"use strict";
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListBlocksWrapper = void 0;
var ListBlocksWrapper = /** @class */ (function () {
    function ListBlocksWrapper() {
    }
    ListBlocksWrapper.prototype.wrapLists = function (blocks) {
        var _this = this;
        return blocks.reduce(function (blocks, b) {
            if (!_this._isList(b))
                return __spreadArrays(blocks, [b]);
            if (_this._isFirstItemOfAList(blocks, b))
                return __spreadArrays(blocks, [_this._generateListBlock(b)]);
            var lastContent = blocks[blocks.length - 1];
            lastContent.children.push(b);
            return blocks;
        }, []);
    };
    ListBlocksWrapper.prototype._isList = function (block) {
        return block && block.type.includes('list');
    };
    ListBlocksWrapper.prototype._isFirstItemOfAList = function (blocks, currentBlock) {
        var lastContent = blocks[blocks.length - 1];
        return ((!this._isList(lastContent) || (lastContent && lastContent.children[0].type !== currentBlock.type)) &&
            this._isList(currentBlock));
    };
    ListBlocksWrapper.prototype._generateListBlock = function (childBlock) {
        return {
            id: childBlock.id + "-parent",
            type: 'list',
            properties: childBlock.properties,
            format: childBlock.format,
            children: [childBlock],
            decorableTexts: [],
        };
    };
    return ListBlocksWrapper;
}());
exports.ListBlocksWrapper = ListBlocksWrapper;
//# sourceMappingURL=list-blocks-wrapper.js.map